#!/bin/bash

# Title:
#	idfx
#
# Description:
#	This script is part of github repository https://github.com/abobija/idfx
#	There you can find more about this script, as well as latest updates
#
#	While there is no support for USB devices for now,
#	this tool comes to help you to flash and monitor
#	your ESP-IDF applications on the WSL2.
#
# Author:
#	Alija Bobija (https://abobija.com | https://github.com/abobija)
#
# Usage:
#	idfx COMMAND PORT [monitor]

IDFX_OK=0
IDFX_FAIL=1
IDFX_ENVIRONMENT_STATUS=$IDFX_FAIL
IDFX_CMAKE_PROJECT_FILE='CMakeLists.txt'
IDFX_CONFIG_ENV_FILE='build/config.env'
IDFX_PROJECT_NAME=''
IDFX_TARGET=''

idfx_err() {
	printf "%s\n" "$*" >&2
}

idfx_environment_check() {
	if [ "$IDFX_ENVIRONMENT_STATUS" -eq "$IDFX_OK" ]; then return $IDFX_OK; fi

	if [[ -z "${WSL_DISTRO_NAME}" ]]; then
		idfx_err "Error: WSL_DISTRO_NAME environment variable is not set"
		return $IDFX_FAIL
	fi

	if [[ -z "${IDF_PATH}" ]]; then
		idfx_err "Error: IDF_PATH environment variable is not set"
		return $IDFX_FAIL
	fi

	if ! [ -f "$IDFX_CMAKE_PROJECT_FILE" ]; then
		idfx_err "Error: Cannot find $IDFX_CMAKE_PROJECT_FILE."
		idfx_err "Are you sure that you are in the project folder?"
		return $IDFX_FAIL
	fi

	if ! [ -f "$IDFX_CONFIG_ENV_FILE" ]; then
		idfx_err "Error: Cannot find $IDFX_CONFIG_ENV_FILE"
		idfx_err 'Make sure to first build the project with the next command
		idf.py build'
		return $IDFX_FAIL
	fi

	if ! command -v python.exe &> /dev/null; then
		idfx_err 'Python needs to be installed on the Windows'
		return $IDFX_FAIL
	fi

	if [[ $(python.exe -c 'import pkgutil; print(1 if pkgutil.find_loader("esptool") else 0)') != '1'* ]]; then
		idfx_err 'Python package "esptool" needs to be installed on the Windows.'
		read -p 'Would you like to install it now (y/n): ' answer
		
		if [[ "$answer" == 'y' ]]; then
			idfx_err 'Ok. Installing esptool...'
			pip.exe install esptool
			if [[ $? != 0 ]]; then return $?; fi
		else
			idfx_err 'Sorry but esptool needs to be installed'
			return $IDFX_FAIL
		fi
	fi
	
	IDFX_PROJECT_NAME=$(grep -oP '(?<=project\()[^ ]*(?=[ \)])' $IDFX_CMAKE_PROJECT_FILE)
	IDFX_TARGET=$(grep -oP '(?<="IDF_TARGET": ")[^"]*' $IDFX_CONFIG_ENV_FILE)
	IDFX_ENVIRONMENT_STATUS=$IDFX_OK

	return $IDFX_OK
}

idfx_build() {
	idf.py build
	return $?
}

idfx_flash() {
	if ! idfx_environment_check; then return $IDFX_FAIL; fi

	local cmd=$((echo "esptool.py -p $1 -b 460800 --before default_reset --after hard_reset --chip $IDFX_TARGET write_flash "; cat build/flash_project_args) | tr '\n' ' ')
	powershell.exe -Command "cd build ; $cmd"

	return $?
}

idfx_erase_flash() {
	if ! idfx_environment_check; then return $IDFX_FAIL; fi

	local cmd="esptool.py -p $1 -b 460800 --chip $IDFX_TARGET erase_flash"
	powershell.exe -Command "$cmd"

	return $?
}

idfx_monitor() {
	if ! idfx_environment_check; then return $IDFX_FAIL; fi

	local idf_monitor_path="$IDF_PATH/tools/idf_monitor.py"
	
	if ! [ -f "$idf_monitor_path" ]; then
		idfx_err "Error: Cannot find $idf_monitor_path"
		return $IDFX_FAIL
	fi
	
	local wsl_root="\\\\wsl\$\\$WSL_DISTRO_NAME"
	local wsl_pwd=$(pwd)
	local elf_path="/build/$IDFX_PROJECT_NAME.elf"
	
	if [[ ${wsl_pwd:1:3} == 'mnt' ]]; then
		local win_root="${wsl_pwd:5:1}:${wsl_pwd:6}"
		elf_path="$win_root$elf_path"
	else
		elf_path="$wsl_root$wsl_pwd$elf_path"
	fi
	
	local additional_args=''
	local disable_addr_dec='disable-address-decoding'
	
	if grep -qF "$disable_addr_dec" "$idf_monitor_path"; then
		additional_args+=" --$disable_addr_dec"
	fi
	
	local monitor_cmd=$(echo "python.exe $wsl_root/$idf_monitor_path $additional_args -p $1 $elf_path")
	powershell.exe -Command "$monitor_cmd"

	return $?
}

if [ $# -lt 2 ] || [[ "$1" != 'flash' && "$1" != 'monitor' && "$1" != 'erase_flash' && "$1" != 'all' ]]; then
	idfx_err 'Error: Wrong format'
	idfx_err 'Usage:
	idfx COMMAND PORT
	
	Commands:
		flash        Flash the project.
		monitor      Display serial output.
		all          Build, flash and monitor.
		erase_flash  Erase entire flash.
		
	Examples:
		idfx flash COM6
		idfx monitor COM6
		idfx flash COM6 monitor
		idfx all COM6
		idfx erase_flash COM6'
	
	exit $IDFX_FAIL
elif [ "$1" == 'all' ]; then
	idfx_build && idfx_flash $2 && idfx_monitor $2
elif [ "$1" == 'flash' ]; then
	idfx_flash $2
elif [ "$1" == 'erase_flash' ]; then
	idfx_erase_flash $2
elif [[ "$1" == 'monitor' ]] || [[ $# -gt 2 && "$3" == 'monitor' ]]; then
	idfx_monitor $2
fi