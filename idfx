#!/bin/bash

# Title:
#	idfx
#
# Description:
#	This script is part of github repository https://github.com/abobija/idfx
#	There you can find more about this script, as well as latest updates
#
#	While there is no support for USB devices for now,
#	this tool comes to help you to flash and monitor
#	your ESP-IDF applications on the WSL2.
#
# Author:
#	Alija Bobija (https://github.com/abobija | https://abobija.com)
#
# Usage:
#	idfx COMMAND PORT [monitor]

if [ $# -lt 2 ] || [[ "$1" != 'flash' && "$1" != 'monitor' ]]; then
	echo 'Error: Wrong format'
	echo 'Usage:
	idfx COMMAND PORT
	
	Commands:
		flash     Flash the project.
		monitor   Display serial output.
		
	Example:
		idfx flash COM6
		idfx monitor COM6'
	echo
	
	exit
fi

if [[ -z "${IDF_PATH}" ]]; then
	echo "Error: IDF_PATH environment variable is not set"
	exit
fi

cmake_project_file='CMakeLists.txt'

if ! [ -f "$cmake_project_file" ]; then
	echo "Error: Cannot find $cmake_project_file."
	echo "Are you sure that you are in the project folder?"
	exit
fi

config_env_file='build/config.env'

if ! [ -f "$config_env_file" ]; then
	echo "Error: Cannot find $config_env_file"
	echo 'Make sure to first build the project with the next command
	idf.py build'
	exit
fi

project_name=$(grep -oP '(?<=project\()[^ ]*(?=[ \)])' $cmake_project_file)
idf_target=$(grep -oP '(?<="IDF_TARGET": ")[^"]*' $config_env_file)

# Constructing wsl_root and wsl_home variables
# wsl_root will be: \\wsl$\<distribution_name>
# and wsl_home will be: \\wsl$\<distribution_name>\home\<linux_user>

wsl_pwd=$(powershell.exe -Command '(Get-Location).Path | Convert-Path' | tr -d '\r' | tr -d '\n')
wsl_root=$wsl_pwd
home_index=$(echo $wsl_root | grep -b -o '\home' | sed 's/:.*$//')
wsl_root=${wsl_root:0:$home_index-1}
wsl_home="$wsl_root$HOME"

# Ckecking if python and esptool package are installed on the windows

if ! command -v python.exe &> /dev/null; then
	echo 'Python needs to be installed on the Windows'
	exit
fi

if [[ $(python.exe -c 'import pkgutil; print(1 if pkgutil.find_loader("esptool") else 0)') != '1'* ]]; then
	echo 'Python package "esptool" needs to be installed on the Windows.'
	read -p 'Would you like to install it now (y/n): ' answer
	
	if [[ "$answer" == 'y' ]]; then
		echo 'Ok. Installing esptool...'
		pip.exe install esptool
	else
		echo 'Sorry but esptool needs to be installed'
		exit
	fi
fi

if [ "$1" = 'flash' ]; then
	flash_cmd=$((echo "esptool.py
		-p $2
		-b 460800 --before default_reset --after hard_reset
		--chip $idf_target
		write_flash "; cat build/flash_project_args) | tr '\n' ' ')
	
	powershell.exe -Command "cd build ; $flash_cmd"
fi

if [[ "$1" = 'monitor' ]] || [[ $# -gt 2 && "$3" = 'monitor' ]]; then
	idf_monitor_path="$IDF_PATH/tools/idf_monitor.py"
	
	if ! [ -f "$idf_monitor_path" ]; then
		echo "Error: Cannot find $idf_monitor_path"
		exit
	fi
	
	monitor_cmd=$(echo "python.exe $wsl_root/$idf_monitor_path -p $2 $wsl_pwd/build/$project_name.elf")
	
	powershell.exe -Command "$monitor_cmd"
fi